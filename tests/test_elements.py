"""Test elements.py."""
# pylint: disable=import-error, wrong-import-position, unused-argument, line-too-long

import sys
import os

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from elements import element_print_out


def test_element_print_out(capfd):
    """Test element_print_out()"""
    element_print_out()
    captured = capfd.readouterr()
    expected_output = (
        "--THE PERIODIC TABLE ELEMENTS--\n\n\n"
        "1. Hydrogen (H)\n\n"
        "Alkali Metals - Group 1\n"
        "3. Lithium (Li)\n"
        "11. Sodium (Na)\n"
        "19. Potassium (K)\n"
        "37. Rubidium (Rb)\n"
        "55. Cesium (Cs)\n"
        "87. Francium (Fr)\n\n"
        "Alkaline Earth Metals - Group 2\n"
        "4. Beryllium (Be)\n"
        "12. Magnesium (Mg)\n"
        "20. Calcium (Ca)\n"
        "38. Strontium (Sr)\n"
        "56. Barium (Ba)\n"
        "88. Radium (Ra)\n\n"
        "Transition Elements - Groups 3-12\n"
        "21. Scandium (Sc)\n"
        "22. Titanium (Ti)\n"
        "23. Vanadium (V)\n"
        "24. Chromium (Cr)\n"
        "25. Manganese (Mn)\n"
        "26. Iron (Fe)\n"
        "27. Cobalt (Co)\n"
        "28. Nickel (Ni)\n"
        "29. Copper (Cu)\n"
        "30. Zinc (Zn)\n"
        "39. Yttrium (Y)\n"
        "40. Zirconium (Zr)\n"
        "41. Niobium (Nb)\n"
        "42. Molybdenum (Mo)\n"
        "43. Technetium (Tc)\n"
        "44. Ruthenium (Ru)\n"
        "45. Rhodium (Rh)\n"
        "46. Palladium (Pd)\n"
        "47. Silver (Ag)\n"
        "48. Cadmium (Cd)\n"
        "72. Hafnium (Hf)\n"
        "73. Tantalum (Ta)\n"
        "74. Tungsten (W)\n"
        "75. Rhenium (Re)\n"
        "76. Osium (Os)\n"
        "77. Iridium (Ir)\n"
        "78. Platinum (Pt)\n"
        "79. Gold (Au)\n"
        "80. Mercury (Hg)\n\n"
        "Boron Elements - Group 13\n"
        "5. Boron (B)\n"
        "13. Aluminum (Al)\n"
        "31. Gallium (Ga)\n"
        "49. Indium (In)\n"
        "81. Thallium (Ti)\n"
        "113. Element 113 - Unknown Element (Uut)\n\n"
        "Carbon Elements - Group 14\n"
        "6. Carbon (C)\n"
        "14. Silicon (Si)\n"
        "32. Germanium (Ge)\n"
        "50. Tin (Sn)\n"
        "82. Lead (Pb)\n"
        "114. Flerovium (Fi)\n\n"
        "Nitrogen Elements - Group 15\n"
        "7. Nitrogen (N)\n"
        "15. Phosphorus (P)\n"
        "33. Arsenic (As)\n"
        "51. Antimony (Sb)\n"
        "83. Bismuth (Bi)\n"
        "115. Element 115 - Unknown Element (Uup)\n\n"
        "Oxygen Elements - Group 16\n"
        "8. Oxygen (O)\n"
        "16. Sulfur (S)\n"
        "34. Selenium (Se)\n"
        "52. Tellurium (Te)\n"
        "84. Polonium (Po)\n"
        "116. Livermorium (Lv)\n\n"
        "Halogen Elements - Group 17\n"
        "9. Fluorine (F)\n"
        "17. Chlorine (Cl)\n"
        "35. Bromine (Br)\n"
        "53. Iodine (I)\n"
        "85. Astatine (At)\n"
        "117. Element 117 - Unknown Element (Uus)\n\n"
        "Noble Gases - Group 18\n"
        "2. Helium (He)\n"
        "10. Neon (Ne)\n"
        "18. Argon (Ar)\n"
        "36. Krypton (Kr)\n"
        "54. Xenon (Xe)\n"
        "86. Radon (Rn)\n"
        "118. Element 118 - Unknown Element (Uuo)\n\n"
        "Lanthanide Elements\n"
    )
    assert captured.out == expected_output
